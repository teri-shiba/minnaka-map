name: Continuous Integration

on: push

jobs:
  RSpec:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    services:
      postgres:
        image: postgres:16.4
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.5
          bundler-cache: true
      - name: Database prepare
        run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:prepare RAILS_ENV=test

      - name: Run rspec
        run: bundle exec rspec --format documentation

  RuboCop:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
            ruby-version: 3.3.5
            bundler-cache: true
      - run: bundle exec rubocop

  ESLint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: npm ci --no-audit --no-fund
      - run: npm run lint

  Vitest:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: npm ci --no-audit --no-fund

      - name: Run Vitest test
        env:
          CI: 'true'
        run: npm vitest --run --reporter=github-actions --project unit --project integration

  Deploy-Sentry:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [ESLint, Vitest]
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - run: npm ci --no-audit --no-fund
      - run: npm run build
      - name: Upload to Sentry
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: sole-proprietor-s4
          SENTRY_PROJECT: javascript-nextjs
        run: |
          npx @sentry/cli releases new ${{ github.sha }}
          npx @sentry/cli releases files ${{ github.sha }} upload-sourcemaps .next/static/
          npx @sentry/cli releases finalize ${{ github.sha }}